webpackJsonp([0x65319fbfd5e8],{483:function(n,a){n.exports={data:{site:{siteMetadata:{title:"Edgar Aroutiounian's website",author:"Edgar Aroutiounian"}},markdownRemark:{id:"/Users/Edgar/Repos/fxfactorial.github.io/src/pages/2016-03-22-simple-timeouts/index.md absPath of file >>> MarkdownRemark",html:'<p><em>This post was orginally written on <code>2016-03-22</code> and was in OCaml</em></p>\n<p>I wanted to use a timeout in OCaml for some shell coding but I didn’t\nwant to introduce a big dependency on <code>Lwt</code>. After some googling I\nfound\n<a href="https://www.reddit.com/r/ocaml/comments/3qapbv/question_about_writing_a_timeout_function_and_the/">this</a></p>\n<p>Here’s my take on the timeout function, basically its the same but I\npush everything into the timeout function itself and use labeled args\nalong a callback for when the timeout goes off.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">let</span> timeout <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token function-variable function">on_timeout</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">~</span>arg<span class="token punctuation">,</span> <span class="token operator">~</span>timeout<span class="token punctuation">,</span> <span class="token operator">~</span>default_value<span class="token punctuation">,</span> f<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  module Wrapper <span class="token operator">=</span> <span class="token punctuation">{</span>\n    exception Timeout<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> sigalrm_handler <span class="token operator">=</span> Sys<span class="token punctuation">.</span><span class="token function">Signal_handle</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">raise</span><span class="token punctuation">(</span>Wrapper<span class="token punctuation">.</span>Timeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> old_behavior <span class="token operator">=</span> Sys<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span>Sys<span class="token punctuation">.</span>sigalrm<span class="token punctuation">,</span> sigalrm_handler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> <span class="token function-variable function">reset_sigalrm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> Sys<span class="token punctuation">.</span><span class="token function">set_signal</span><span class="token punctuation">(</span>Sys<span class="token punctuation">.</span>sigalrm<span class="token punctuation">,</span> old_behavior<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">ignore</span><span class="token punctuation">(</span>Unix<span class="token punctuation">.</span><span class="token function">alarm</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">reset_sigalrm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    res<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token punctuation">{</span>\n  <span class="token operator">|</span> exc <span class="token operator">=></span>\n    <span class="token function">reset_sigalrm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>exc <span class="token operator">==</span> Wrapper<span class="token punctuation">.</span>Timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">on_timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      default_value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">raise</span><span class="token punctuation">(</span>exc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>and you can can use it like so:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code> Sys<span class="token punctuation">.</span>command\n  <span class="token operator">|</span><span class="token operator">></span> <span class="token function">timeout</span><span class="token punctuation">(</span>\n       <span class="token operator">~</span>arg<span class="token operator">=</span><span class="token string">"sleep 3"</span><span class="token punctuation">,</span>\n       <span class="token operator">~</span>timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>\n       <span class="token operator">~</span>default_value<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n       <span class="token operator">~</span><span class="token function-variable function">on_timeout</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">print_endline</span><span class="token punctuation">(</span><span class="token string">"func timed out"</span><span class="token punctuation">)</span>\n     <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>You might notice that your wrapped function only gets one arg, so how\ncan we use this timeout wrapper on functions that take more than one\nargument? By currying and using a dummy arg of unit. </p>\n<p>Example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> partialed <span class="token operator">=</span> <span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> third<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=></span> first <span class="token operator">+</span> second <span class="token operator">+</span> third<span class="token punctuation">;</span>\n  <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token operator">~</span>arg<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">~</span>timeout<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">~</span>default_value<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">partialed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">></span> ignore<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>',frontmatter:{title:"Simple timeout usage",date:"March 22, 2016"}}},pathContext:{slug:"/2016-03-22-simple-timeouts/"}}}});
//# sourceMappingURL=path---2016-03-22-simple-timeouts-a7c48e3fccf7c21e1d18.js.map