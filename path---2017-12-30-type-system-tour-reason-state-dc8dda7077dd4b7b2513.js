webpackJsonp([0xbb536c8901f3],{486:function(n,a){n.exports={data:{site:{siteMetadata:{title:"Edgar Aroutiounian's website",author:"Edgar Aroutiounian"}},markdownRemark:{id:"/Users/Edgar/Repos/fxfactorial.github.io/src/pages/2017-12-30-type-system-tour-reason-state/index.md absPath of file >>> MarkdownRemark",html:'<p>Let’s play with the type system of ReasonML and ReasonReact.</p>\n<h2>Starting with the problem</h2>\n<p>The problem I encountered is that I wanted to parametrize over my\nstate.</p>\n<p>a first attempt, let’s wrap in a module to keep things organized.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>module Example <span class="token operator">=</span> <span class="token punctuation">{</span>\n  type action <span class="token operator">=</span>\n    <span class="token operator">|</span> Pull_data<span class="token punctuation">;</span>\n  type <span class="token function">github_payload</span><span class="token punctuation">(</span><span class="token string">\'with_rest_payload) = list(({.. "stars": int} as \'</span>with_rest_payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> s <span class="token operator">=</span> ReasonReact<span class="token punctuation">.</span>stringToElement<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> stars_component <span class="token operator">=</span> ReasonReact<span class="token punctuation">.</span><span class="token function">reducerComponent</span><span class="token punctuation">(</span><span class="token string">"Stars"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> style <span class="token operator">=</span> ReactDOMRe<span class="token punctuation">.</span>Style<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token operator">~</span>display<span class="token operator">=</span><span class="token string">"flex"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> <span class="token function-variable function">make</span> <span class="token operator">=</span> <span class="token punctuation">(</span>children<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>stars_component<span class="token punctuation">,</span>\n    initialState<span class="token punctuation">:</span> <span class="token function">fun</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token function">github_payload</span><span class="token punctuation">(</span>\'a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    reducer<span class="token punctuation">:</span> <span class="token punctuation">(</span>action<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=></span>\n      <span class="token keyword">switch</span> action <span class="token punctuation">{</span>\n      <span class="token operator">|</span> Pull_data <span class="token operator">=></span> ReasonReact<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"stars"</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>div style onClick<span class="token operator">=</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=></span> Pull_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token string">"Hi"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>While merlin doesn’t complain about type errors, the compiler errors\nout with:</p>\n<div class="gatsby-highlight">\n      <pre class="language-ocaml"><code>The <span class="token keyword">type</span> <span class="token keyword">of</span> this <span class="token keyword">module</span> contains <span class="token keyword">type</span> variables that cannot be generalized<span class="token punctuation">:</span>\n <span class="token punctuation">{</span>\n    <span class="token keyword">type</span> action <span class="token operator">=</span> Pull<span class="token punctuation">_</span>data<span class="token punctuation">;</span>\n    <span class="token keyword">type</span> github<span class="token punctuation">_</span>payload<span class="token punctuation">(</span><span class="token type variable">\'a</span><span class="token punctuation">)</span> <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token type variable">\'a</span><span class="token punctuation">)</span>\n      <span class="token keyword">constraint</span> <span class="token type variable">\'a</span> <span class="token operator">=</span> Js<span class="token punctuation">.</span>t<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span> stars <span class="token punctuation">:</span> int <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token type variable">\'b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token operator">=></span> ReasonReact<span class="token punctuation">.</span>reactElement<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> stars<span class="token punctuation">_</span>component<span class="token punctuation">:</span>\n      ReasonReact<span class="token punctuation">.</span>componentSpec\n      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token type variable">\'_a</span><span class="token punctuation">)</span> <span class="token operator">=></span> list<span class="token punctuation">(</span>Js<span class="token punctuation">.</span>t<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">.</span> stars <span class="token punctuation">:</span> int <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  ReasonReact<span class="token punctuation">.</span>stateless<span class="token punctuation">,</span>\n        ReasonReact<span class="token punctuation">.</span>noRetainedProps<span class="token punctuation">,</span>  ReasonReact<span class="token punctuation">.</span>noRetainedProps<span class="token punctuation">,</span>  action<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> style<span class="token punctuation">:</span> ReactDOMRe<span class="token punctuation">.</span>style<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> make<span class="token punctuation">:</span>\n      <span class="token punctuation">(</span><span class="token type variable">\'a</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n      ReasonReact<span class="token punctuation">.</span>componentSpec\n      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token type variable">\'_b</span><span class="token punctuation">)</span> <span class="token operator">=></span> list<span class="token punctuation">(</span>Js<span class="token punctuation">.</span>t<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">.</span> stars <span class="token punctuation">:</span> int <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        github<span class="token punctuation">_</span>payload<span class="token punctuation">(</span>Js<span class="token punctuation">.</span>t<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span> stars <span class="token punctuation">:</span> int <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        ReasonReact<span class="token punctuation">.</span>noRetainedProps<span class="token punctuation">,</span>  ReasonReact<span class="token punctuation">.</span>noRetainedProps<span class="token punctuation">,</span>  action<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>So what does this even mean? It means that we aren’t able to satisfy\nthe signature that <code>ReasonReact</code> wants, that is, we have introduced a\ntype variable the <code>componentSpec</code> does not account for.</p>',frontmatter:{title:"Type error and types in ReasonML",date:"December 30, 2017"}}},pathContext:{slug:"/2017-12-30-type-system-tour-reason-state/"}}}});
//# sourceMappingURL=path---2017-12-30-type-system-tour-reason-state-dc8dda7077dd4b7b2513.js.map